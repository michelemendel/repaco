// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");

function andThen(parser1, parser2, input) {
  var match = Curry._1(parser1, input);
  if (match.tag) {
    return /* Fail */Block.__(1, [match[0]]);
  } else {
    var match$1 = match[0];
    var match$2 = Curry._1(parser2, match$1[1]);
    if (match$2.tag) {
      return /* Fail */Block.__(1, [match$2[0]]);
    } else {
      var match$3 = match$2[0];
      return /* Success */Block.__(0, [/* tuple */[
                  /* tuple */[
                    match$1[0],
                    match$3[0]
                  ],
                  match$3[1]
                ]]);
    }
  }
}

function orElse(parser1, parser2, input) {
  var match = Curry._1(parser1, input);
  if (match.tag) {
    var match$1 = Curry._1(parser2, input);
    if (match$1.tag) {
      return /* Fail */Block.__(1, [match$1[0]]);
    } else {
      var match$2 = match$1[0];
      return /* Success */Block.__(0, [/* tuple */[
                  match$2[0],
                  match$2[1]
                ]]);
    }
  } else {
    var match$3 = match[0];
    return /* Success */Block.__(0, [/* tuple */[
                match$3[0],
                match$3[1]
              ]]);
  }
}

var $neg$great$great$neg = andThen;

var $less$pipe$great = orElse;

exports.andThen = andThen;
exports.$neg$great$great$neg = $neg$great$great$neg;
exports.orElse = orElse;
exports.$less$pipe$great = $less$pipe$great;
/* No side effect */
